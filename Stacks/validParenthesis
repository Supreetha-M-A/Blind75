/**
 * Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 
Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false

 * @param {string} s
 * @return {boolean}
 */
var isValid = function(s) {
    let stack = [];
    let open = ["(","{","["];
    let close = [")","}","]"];
    for( c of s ) {
        if( close.includes(c) && (open.indexOf(stack[stack.length -1]) === close.indexOf(c))) stack.pop();
        else stack.push(c);
    }
    return stack.length === 0;
};